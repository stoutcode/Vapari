package kanta.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import static kanta.HetuTarkistus.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.03.22 14:23:38 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class HetuTarkistusTest {



  // Generated by ComTest BEGIN
  /** testHetunTarkistusMerkki29 */
  @Test
  public void testHetunTarkistusMerkki29() {    // HetuTarkistus: 29
    assertEquals("From: HetuTarkistus line: 30", 'N', hetunTarkistusMerkki("121212-222")); 
    assertEquals("From: HetuTarkistus line: 31", 'N', hetunTarkistusMerkki("121212-222S")); 
    assertEquals("From: HetuTarkistus line: 32", 'N', hetunTarkistusMerkki("121212-222N")); 
    assertEquals("From: HetuTarkistus line: 33", 'Y', hetunTarkistusMerkki("121212-231Y")); 
    assertEquals("From: HetuTarkistus line: 34", '7', hetunTarkistusMerkki("311212-2317")); 
    assertEquals("From: HetuTarkistus line: 35", '7', hetunTarkistusMerkki("311212-2317XY"));  // vaikka on liikaa merkkejä
    assertEquals("From: HetuTarkistus line: 36", 'F', hetunTarkistusMerkki("999999-9999XY"));  // vaikka on pvm väärin
    try {
    assertEquals("From: HetuTarkistus line: 37", 'N', hetunTarkistusMerkki("12121A-222S")); 
    fail("HetuTarkistus: 37 Did not throw NumberFormatException");
    } catch(NumberFormatException _e_){ _e_.getMessage(); }
    try {
    assertEquals("From: HetuTarkistus line: 38", 'N', hetunTarkistusMerkki("12121A-22")); 
    fail("HetuTarkistus: 38 Did not throw StringIndexOutOfBoundsException");
    } catch(StringIndexOutOfBoundsException _e_){ _e_.getMessage(); }
    try {
    assertEquals("From: HetuTarkistus line: 39", 'N', hetunTarkistusMerkki("121")); 
    fail("HetuTarkistus: 39 Did not throw StringIndexOutOfBoundsException");
    } catch(StringIndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testTarkista88 */
  @Test
  public void testTarkista88() {    // HetuTarkistus: 88
    assertEquals("From: HetuTarkistus line: 89", "Hetu liian lyhyt", tarkista("12121")); 
    assertEquals("From: HetuTarkistus line: 90", "Hetu liian lyhyt", tarkista("k")); 
    assertEquals("From: HetuTarkistus line: 91", "Hetun päivämäärä liian pieni", tarkista("001212-132N")); 
    assertEquals("From: HetuTarkistus line: 92", "Hetun päivämäärä liian suuri", tarkista("321212-132N")); 
    assertEquals("From: HetuTarkistus line: 93", "Hetun päivämäärä liian suuri", tarkista("300212-132N")); 
    assertEquals("From: HetuTarkistus line: 94", "Hetun päivämäärä liian suuri", tarkista("310412-132N")); 
    assertEquals("From: HetuTarkistus line: 95", "Hetun kuukausi liian suuri", tarkista("121312-132N")); 
    assertEquals("From: HetuTarkistus line: 96", "Hetun kuukausi liian pieni", tarkista("120012-132N")); 
    assertEquals("From: HetuTarkistus line: 97", "Hetu liian pitkä", tarkista("121212-12345")); 
    assertEquals("From: HetuTarkistus line: 98", "Hetu liian lyhyt", tarkista("121212-123")); 
    assertEquals("From: HetuTarkistus line: 99", "Hetun erotinmerkin pitäis olla -", tarkista("121212+222N")); 
    assertEquals("From: HetuTarkistus line: 100", "Hetun viimeisen merkin pitäis olla N", tarkista("121212-222M")); 
    assertEquals("From: HetuTarkistus line: 101", null, tarkista("121212-222N")); 
  } // Generated by ComTest END
}